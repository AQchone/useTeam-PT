import React, { useEffect, useMemo, useState } from 'react';\nimport { Kanban, Task } from './components/Kanban';\nimport { api } from './lib/api';\nimport { connectSocket } from './lib/ws';\n\nfunction App() {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  useEffect(() => {\n    api<Task[]>('/tasks').then(setTasks);\n    const socket = connectSocket();\n    socket.on('task:created', (t: Task) => setTasks(prev => [...prev, t]));\n    socket.on('task:updated', (t: Task) => setTasks(prev => prev.map(p => p._id === t._id ? t : p)));\n    socket.on('task:deleted', ({ id }: { id: string }) => setTasks(prev => prev.filter(p => p._id !== id)));\n    return () => { socket.disconnect(); };\n  }, []);\n\n  const onMove = async (id: string, column: Task['column']) => {\n    const old = tasks;\n    setTasks(prev => prev.map(t => t._id === id ? { ...t, column } : t));\n    try {\n      await api<Task>(/tasks/, { method: 'PATCH', body: JSON.stringify({ column }) });\n    } catch { setTasks(old); }\n  };\n\n  return (\n    <div style={{ padding: 24 }}>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <h2>Kanban</h2>\n        <button onClick={() => api('/export/backlog', { method: 'POST' })}>Exportar Backlog</button>\n      </div>\n      <Kanban tasks={tasks} onMove={onMove} />\n    </div>\n  );\n}\n\nexport default App;\n
